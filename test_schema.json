{
  "routes": [
    {
      "url": "/api/events",
      "params": {},
      "methods": {
        "POST": {
          "summary": "create a new event",
          "body": {
            "!name": "string().min(3).max(50).required()",
            "!details": "string().min(3).required()",
            "!rating": "number().min(1).max(5)"
          },
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!name": "string().min(3).max(50).required()",
              "!details": "string().min(3).required()",
              "!rating": "number().min(1).max(5)"
            }
          }
        },
        "GET": {
          "summary": "get list of all events",
          "expected": {
            "data": [
              {
                "!_id": "string().length(24)",
                "!name": "string().min(3).max(50).required()",
                "!details": "string().min(3).required()",
                "!rating": "number().min(1).max(5)"
              }
            ]
          }
        }
      }
    },
    {
      "url": "/api/events/:id",
      "params": {
        "!id": "string().length(24)"
      },
      "methods": {
        "GET": {
          "summary": "get a single event info",
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!name": "string().min(3).max(50).required()",
              "!details": "string().min(3).required()",
              "!rating": "number().min(1).max(5)"
            }
          }
        },
        "PUT": {
          "summary": "update a single event info",
          "body": {
            "!name": "string().min(3).max(50)",
            "!details": "string().min(3)",
            "!rating": "number().min(1).max(5)"
          },
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!name": "string().min(3).max(50).required()",
              "!details": "string().min(3).required()",
              "!rating": "number().min(1).max(5)"
            }
          }
        },
        "DELETE": {
          "summary": "delete a single event info",
          "body": {},
          "expected": {
            "data": null
          }
        }
      }
    },
    
    {
      "url": "/api/portal_libraries",
      "params": {},
      "methods": {
        "POST": {
          "summary": "create a new portalLibrary",
          "body": {
            "!title": "string().min(3).max(50).required()",
            "!details": "string().min(3).required()"
          },
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!title": "string().min(3).max(50).required()",
              "!details": "string().min(3).required()"
            }
          }
        },
        "GET": {
          "summary": "get list of all portalLibraries",
          "expected": {
            "data": [
              {
                "!_id": "string().length(24)",
                "!title": "string().min(3).max(50).required()",
                "!details": "string().min(3).required()"
              }
            ]
          }
        }
      }
    },
    {
      "url": "/api/portal_libraries/:id",
      "params": {
        "!id": "string().length(24)"
      },
      "methods": {
        "GET": {
          "summary": "get a single portalLibrary info",
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!title": "string().min(3).max(50).required()",
              "!details": "string().min(3).required()"
            }
          }
        },
        "PUT": {
          "summary": "update a single portalLibrary info",
          "body": {
            "!title": "string().min(3).max(50)",
            "!details": "string().min(3)"
          },
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!title": "string().min(3).max(50).required()",
              "!details": "string().min(3).required()"
            }
          }
        },
        "DELETE": {
          "summary": "delete a single portalLibrary info",
          "body": {},
          "expected": {
            "data": null
          }
        }
      
      }
    
    },
    {
      "url": "/api/questions",
      "params": {},
      "methods": {
        "POST": {
          "summary": "create a new question",
          "body": {
            "!quest": "string().min(10).max(1000).required()",
            "!question_id": "number().min(3).required()",
            "!submit_user": "string().min(3).max(50)"
          },
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!quest": "string().min(10).max(1000).required()",
              "!question_id": "number().min(3).required()",
              "!submit_user": "string().min(3).max(50)"
            }
          }
        },
        "GET": {
          "summary": "get list of all questions",
          "expected": {
            "data": [
              {
                "!_id": "string().length(24)",
                "!quest": "string().min(10).max(1000).required()",
                "!question_id": "number().min(3).required()",
                "!submit_user": "string().min(3).max(50)"
              }
            ]
          }
        }
      }
    },
    {
      "url": "/api/questions/:id",
      "params": {
        "!id": "string().length(24)"
      },
      "methods": {
        "GET": {
          "summary": "get a single question",
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!quest": "string().min(10).max(1000).required()",
              "!question_id": "number().min(3).required()",
              "!submit_user": "string().min(3).max(50)"
            }
          }
        },
        "PUT": {
          "summary": "update a single question ",
          "body": {
            "!quest": "string().min(10).max(1000).required()",
            "!question_id": "number().min(3).required()",
            "!submit_user": "string().min(3).max(50)"
          },
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!quest": "string().min(10).max(1000).required()",
              "!question_id": "number().min(3).required()",
              "!submit_user": "string().min(3).max(50)"
            }
          }
        },
        "DELETE": {
          "summary": "delete a single question",
          "body": {},
          "expected": {
            "data": null
          }
        }
      }
    },
    {
    
      "url": "/api/user",
      "params": {},
      "methods": {
        "POST": {
          "summary": "create a new user",
          "body": {
            "!name": "string().min(3).max(50).required()",
            "!password": "string().min(3).required()",
            "!age": "number().min(1).max(5)",
            "!major": "string().min(3).max(50).required()",
            "!admin": "boolean().required()"

          },
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!name": "string().min(3).max(50).required()",
              "!password": "string().min(3).required()",
              "!age": "number().min(1).max(5)",
              "!major": "string().min(3).max(50).required()",
              "!admin": "boolean().required()"
            }
          }
        },
        "GET": {
          "summary": "get list of all users",
          "expected": {
            "data": [
              {
                "!_id": "string().length(24)",
                "!name": "string().min(3).max(50).required()",
                "!password": "string().min(3).required()",
                "!age": "number().min(1).max(5)",
                "!major": "string().min(3).max(50).required()",
                "!admin": "boolean().required()"
              }
            ]
          }
        }
      }
    },
    {
      "url": "/api/user/:id",
      "params": {
        "!id": "string().length(24)"
      },
      "methods": {
        "GET": {
          "summary": "get a single user info",
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!name": "string().min(3).max(50).required()",
              "!password": "string().min(3).required()",
              "!age": "number().min(1).max(5)",
              "!major": "string().min(3).max(50).required()",
              "!admin": "boolean().required()"
            }
          }
        },
        "PUT": {
          "summary": "update a single user info",
          "body": {
            "!name": "string().min(3).max(50).required()",
            "!password": "string().min(3).required()",
            "!age": "number().min(1).max(5)",
            "!major": "string().min(3).max(50).required()",
            "!admin": "boolean().required()"
          },
          "expected": {
            "data": {
              "!_id": "string().length(24)",
              "!name": "string().min(3).max(50).required()",
              "!password": "string().min(3).required()",
              "!age": "number().min(1).max(5)",
              "!major": "string().min(3).max(50).required()",
              "!admin": "boolean().required()"
            }
          }
        },
        "DELETE": {
          "summary": "delete a single user info",
          "body": {},
          "expected": {
            "data": null
          }
        }
      }
    }
<<<<<<< HEAD
    
=======
  
>>>>>>> 338e1b6b3218c74bb55151c4605ee0652c1903fb
  ]
}
